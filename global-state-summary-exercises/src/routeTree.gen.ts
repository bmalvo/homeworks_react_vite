/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SummaryImport } from './routes/summary'
import { Route as SuccessImport } from './routes/success'
import { Route as ShippingImport } from './routes/shipping'
import { Route as OrderImport } from './routes/order'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const SummaryRoute = SummaryImport.update({
  id: '/summary',
  path: '/summary',
  getParentRoute: () => rootRoute,
} as any)

const SuccessRoute = SuccessImport.update({
  id: '/success',
  path: '/success',
  getParentRoute: () => rootRoute,
} as any)

const ShippingRoute = ShippingImport.update({
  id: '/shipping',
  path: '/shipping',
  getParentRoute: () => rootRoute,
} as any)

const OrderRoute = OrderImport.update({
  id: '/order',
  path: '/order',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/order': {
      id: '/order'
      path: '/order'
      fullPath: '/order'
      preLoaderRoute: typeof OrderImport
      parentRoute: typeof rootRoute
    }
    '/shipping': {
      id: '/shipping'
      path: '/shipping'
      fullPath: '/shipping'
      preLoaderRoute: typeof ShippingImport
      parentRoute: typeof rootRoute
    }
    '/success': {
      id: '/success'
      path: '/success'
      fullPath: '/success'
      preLoaderRoute: typeof SuccessImport
      parentRoute: typeof rootRoute
    }
    '/summary': {
      id: '/summary'
      path: '/summary'
      fullPath: '/summary'
      preLoaderRoute: typeof SummaryImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/order': typeof OrderRoute
  '/shipping': typeof ShippingRoute
  '/success': typeof SuccessRoute
  '/summary': typeof SummaryRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/order': typeof OrderRoute
  '/shipping': typeof ShippingRoute
  '/success': typeof SuccessRoute
  '/summary': typeof SummaryRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/order': typeof OrderRoute
  '/shipping': typeof ShippingRoute
  '/success': typeof SuccessRoute
  '/summary': typeof SummaryRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/order' | '/shipping' | '/success' | '/summary'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/order' | '/shipping' | '/success' | '/summary'
  id: '__root__' | '/' | '/order' | '/shipping' | '/success' | '/summary'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OrderRoute: typeof OrderRoute
  ShippingRoute: typeof ShippingRoute
  SuccessRoute: typeof SuccessRoute
  SummaryRoute: typeof SummaryRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OrderRoute: OrderRoute,
  ShippingRoute: ShippingRoute,
  SuccessRoute: SuccessRoute,
  SummaryRoute: SummaryRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/order",
        "/shipping",
        "/success",
        "/summary"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/order": {
      "filePath": "order.tsx"
    },
    "/shipping": {
      "filePath": "shipping.tsx"
    },
    "/success": {
      "filePath": "success.tsx"
    },
    "/summary": {
      "filePath": "summary.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
