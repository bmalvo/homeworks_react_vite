/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WrapperImport } from './routes/_wrapper'
import { Route as IndexImport } from './routes/index'
import { Route as DetailsSplatImport } from './routes/details.$'
import { Route as WrapperPostsImport } from './routes/_wrapper.posts'
import { Route as WrapperPostsIndexImport } from './routes/_wrapper.posts.index'
import { Route as WrapperPostsNewImport } from './routes/_wrapper.posts.new'
import { Route as WrapperPostsEditSplatImport } from './routes/_wrapper.posts.edit.$'
import { Route as WrapperPostsDetailsPostIdImport } from './routes/_wrapper.posts.details.$postId'

// Create/Update Routes

const WrapperRoute = WrapperImport.update({
  id: '/_wrapper',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DetailsSplatRoute = DetailsSplatImport.update({
  path: '/details/$',
  getParentRoute: () => rootRoute,
} as any)

const WrapperPostsRoute = WrapperPostsImport.update({
  path: '/posts',
  getParentRoute: () => WrapperRoute,
} as any)

const WrapperPostsIndexRoute = WrapperPostsIndexImport.update({
  path: '/',
  getParentRoute: () => WrapperPostsRoute,
} as any)

const WrapperPostsNewRoute = WrapperPostsNewImport.update({
  path: '/new',
  getParentRoute: () => WrapperPostsRoute,
} as any)

const WrapperPostsEditSplatRoute = WrapperPostsEditSplatImport.update({
  path: '/edit/$',
  getParentRoute: () => WrapperPostsRoute,
} as any)

const WrapperPostsDetailsPostIdRoute = WrapperPostsDetailsPostIdImport.update({
  path: '/details/$postId',
  getParentRoute: () => WrapperPostsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_wrapper': {
      id: '/_wrapper'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WrapperImport
      parentRoute: typeof rootRoute
    }
    '/_wrapper/posts': {
      id: '/_wrapper/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof WrapperPostsImport
      parentRoute: typeof WrapperImport
    }
    '/details/$': {
      id: '/details/$'
      path: '/details/$'
      fullPath: '/details/$'
      preLoaderRoute: typeof DetailsSplatImport
      parentRoute: typeof rootRoute
    }
    '/_wrapper/posts/new': {
      id: '/_wrapper/posts/new'
      path: '/new'
      fullPath: '/posts/new'
      preLoaderRoute: typeof WrapperPostsNewImport
      parentRoute: typeof WrapperPostsImport
    }
    '/_wrapper/posts/': {
      id: '/_wrapper/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof WrapperPostsIndexImport
      parentRoute: typeof WrapperPostsImport
    }
    '/_wrapper/posts/details/$postId': {
      id: '/_wrapper/posts/details/$postId'
      path: '/details/$postId'
      fullPath: '/posts/details/$postId'
      preLoaderRoute: typeof WrapperPostsDetailsPostIdImport
      parentRoute: typeof WrapperPostsImport
    }
    '/_wrapper/posts/edit/$': {
      id: '/_wrapper/posts/edit/$'
      path: '/edit/$'
      fullPath: '/posts/edit/$'
      preLoaderRoute: typeof WrapperPostsEditSplatImport
      parentRoute: typeof WrapperPostsImport
    }
  }
}

// Create and export the route tree

interface WrapperPostsRouteChildren {
  WrapperPostsNewRoute: typeof WrapperPostsNewRoute
  WrapperPostsIndexRoute: typeof WrapperPostsIndexRoute
  WrapperPostsDetailsPostIdRoute: typeof WrapperPostsDetailsPostIdRoute
  WrapperPostsEditSplatRoute: typeof WrapperPostsEditSplatRoute
}

const WrapperPostsRouteChildren: WrapperPostsRouteChildren = {
  WrapperPostsNewRoute: WrapperPostsNewRoute,
  WrapperPostsIndexRoute: WrapperPostsIndexRoute,
  WrapperPostsDetailsPostIdRoute: WrapperPostsDetailsPostIdRoute,
  WrapperPostsEditSplatRoute: WrapperPostsEditSplatRoute,
}

const WrapperPostsRouteWithChildren = WrapperPostsRoute._addFileChildren(
  WrapperPostsRouteChildren,
)

interface WrapperRouteChildren {
  WrapperPostsRoute: typeof WrapperPostsRouteWithChildren
}

const WrapperRouteChildren: WrapperRouteChildren = {
  WrapperPostsRoute: WrapperPostsRouteWithChildren,
}

const WrapperRouteWithChildren =
  WrapperRoute._addFileChildren(WrapperRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof WrapperRouteWithChildren
  '/posts': typeof WrapperPostsRouteWithChildren
  '/details/$': typeof DetailsSplatRoute
  '/posts/new': typeof WrapperPostsNewRoute
  '/posts/': typeof WrapperPostsIndexRoute
  '/posts/details/$postId': typeof WrapperPostsDetailsPostIdRoute
  '/posts/edit/$': typeof WrapperPostsEditSplatRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof WrapperRouteWithChildren
  '/details/$': typeof DetailsSplatRoute
  '/posts/new': typeof WrapperPostsNewRoute
  '/posts': typeof WrapperPostsIndexRoute
  '/posts/details/$postId': typeof WrapperPostsDetailsPostIdRoute
  '/posts/edit/$': typeof WrapperPostsEditSplatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_wrapper': typeof WrapperRouteWithChildren
  '/_wrapper/posts': typeof WrapperPostsRouteWithChildren
  '/details/$': typeof DetailsSplatRoute
  '/_wrapper/posts/new': typeof WrapperPostsNewRoute
  '/_wrapper/posts/': typeof WrapperPostsIndexRoute
  '/_wrapper/posts/details/$postId': typeof WrapperPostsDetailsPostIdRoute
  '/_wrapper/posts/edit/$': typeof WrapperPostsEditSplatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/posts'
    | '/details/$'
    | '/posts/new'
    | '/posts/'
    | '/posts/details/$postId'
    | '/posts/edit/$'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/details/$'
    | '/posts/new'
    | '/posts'
    | '/posts/details/$postId'
    | '/posts/edit/$'
  id:
    | '__root__'
    | '/'
    | '/_wrapper'
    | '/_wrapper/posts'
    | '/details/$'
    | '/_wrapper/posts/new'
    | '/_wrapper/posts/'
    | '/_wrapper/posts/details/$postId'
    | '/_wrapper/posts/edit/$'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WrapperRoute: typeof WrapperRouteWithChildren
  DetailsSplatRoute: typeof DetailsSplatRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WrapperRoute: WrapperRouteWithChildren,
  DetailsSplatRoute: DetailsSplatRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_wrapper",
        "/details/$"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_wrapper": {
      "filePath": "_wrapper.tsx",
      "children": [
        "/_wrapper/posts"
      ]
    },
    "/_wrapper/posts": {
      "filePath": "_wrapper.posts.tsx",
      "parent": "/_wrapper",
      "children": [
        "/_wrapper/posts/new",
        "/_wrapper/posts/",
        "/_wrapper/posts/details/$postId",
        "/_wrapper/posts/edit/$"
      ]
    },
    "/details/$": {
      "filePath": "details.$.tsx"
    },
    "/_wrapper/posts/new": {
      "filePath": "_wrapper.posts.new.tsx",
      "parent": "/_wrapper/posts"
    },
    "/_wrapper/posts/": {
      "filePath": "_wrapper.posts.index.tsx",
      "parent": "/_wrapper/posts"
    },
    "/_wrapper/posts/details/$postId": {
      "filePath": "_wrapper.posts.details.$postId.tsx",
      "parent": "/_wrapper/posts"
    },
    "/_wrapper/posts/edit/$": {
      "filePath": "_wrapper.posts.edit.$.tsx",
      "parent": "/_wrapper/posts"
    }
  }
}
ROUTE_MANIFEST_END */
